{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","pages/HomePage.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","to","slug","cn","sex","name","PeopleTable","people","useParams","map","mother","find","p","motherName","father","fatherName","born","died","PeoplePage","useState","setPeople","isLoading","setIsLoading","errorMessage","setErrorMessage","loadPeople","peopleData","useEffect","isShowErrorMessage","length","NotFoundPage","HomePage","getLinkClass","isActive","App","role","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.77c448ec.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`/people/${person.slug}`}\n    className={cn({\n      'has-text-danger': person.sex === 'f',\n    })}\n  >\n    {person.name}\n  </Link>\n);\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => {\n          const mother = people.find((p) => p.name === person.motherName);\n\n          const father = people.find((p) => p.name === person.fatherName);\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={person.slug}\n              className={cn({ 'has-background-warning': person.slug === slug })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n\n              <td>\n                {mother ? (\n                  <PersonLink person={mother} />\n                ) : (\n                  person.motherName || '-'\n                )}\n              </td>\n\n              <td>\n                {father ? (\n                  <PersonLink person={father} />\n                ) : (\n                  person.fatherName || '-'\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const loadPeople = async () => {\n    setIsLoading(true);\n    try {\n      const peopleData = await getPeople();\n\n      setPeople(peopleData);\n    } catch (error) {\n      setErrorMessage('Something went wrong');\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  const isShowErrorMessage = !isLoading && !errorMessage && people.length === 0;\n\n  return (\n    <div className=\"block\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"box table-container\">\n        {isLoading && <Loader />}\n\n        {errorMessage && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            {errorMessage}\n          </p>\n        )}\n\n        {isShowErrorMessage && (\n          <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n        )}\n\n        {people.length > 0 && (\n          <PeopleTable people={people} />\n        )}\n      </div>\n    </div>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import {\n  NavLink, Route, Routes, Navigate,\n} from 'react-router-dom';\nimport cn from 'classnames';\n\nimport './App.scss';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { HomePage } from './pages/HomePage';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => cn(\n  'navbar-item', { 'has-background-grey-lighter': isActive },\n);\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={getLinkClass}>\n            Home\n          </NavLink>\n\n          <NavLink to=\"/people\" className={getLinkClass}>\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/people\" element={<PeoplePage />} />\n          <Route path=\"/people/:slug\" element={<PeoplePage />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}